/*
_    _                 _ _         _____                          _
| |  | |               | | |       / ____|                        | |
| |__| | __ _ _ __   __| | | ___  | |  __  __ _ _ __ ___   ___  __| |
|  __  |/ _` | '_ \ / _` | |/ _ \ | | |_ |/ _` | '_ ` _ \ / _ \/ _` |
| |  | | (_| | | | | (_| | |  __/ | |__| | (_| | | | | | |  __/ (_| |
|_|  |_|\__,_|_| |_|\__,_|_|\___|  \_____|\__,_|_| |_| |_|\___|\__,_|

         pausing is not losing
*/

/*
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define EPS 1e-9
#define all(v) ((v).begin()), ((v).end()) //sorting from the smallest
#define Ceil(x,y) ((x+y-1)/y)
#define watch(x) cout<<(#x)<<" = "<<x<<endl //print the variable and the current value of it
#define rt(s) return cout<<s,0 //cout<<s; return 0;
#define IAMTRYINGandCRYING ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
#define infinity 2'000'000'000
#define sz(x) int(x.size())
#define numOfOnes(n) __builtin_popcount(n)
int main() {
    IAMTRYINGandCRYING;
    ll product=1,maxi=INT_MIN;
    int start=0,arr[1000];
    char num[]="7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450";
        for (int last = 13; last <1000; ++last) {
            for (int i = 0; i <13; ++i) {
                arr[i]=num[i+start]-'0';  // convert to int
                product*=arr[i];
            }
            if(product>maxi){
                maxi=product;
            }
            product=1;
            start++;
        }
          cout<<maxi;

    */
/*    ll product=1,maxi=1;
int last=13,start=0,arr[1000];
char num[]="7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450";

while (last<1000){

    for (int i = 0; i <13; ++i) {
        arr[i]=num[i+start]-'0';  // convert to int
        product*=arr[i];
//            printf("%ll",product);
    }
    if(product>maxi){
        maxi=product;
    }
    product=1;
    start++;
    last++;
}
printf("%llu",maxi);*//*

}
*/


